<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/KillEnemies/Character.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/KillEnemies/Character.java" />
              <option name="originalContent" value="package KillEnemies;&#10;&#10;public interface Character {&#10;    boolean isEnemy();&#10;}&#10;" />
              <option name="updatedContent" value="package KillEnemies;&#10;&#10;public interface Character {&#10;    boolean isEnemy();&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/KillEnemies/Enemy.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/KillEnemies/Enemy.java" />
              <option name="originalContent" value="package KillEnemies;&#10;&#10;public class Enemy implements Character{&#10;    void kill(){&#10;        System.out.println(&quot;Ahhhggg, you killed me, bastard!&quot;);&#10;    }&#10;    @Override&#10;    public boolean isEnemy() {&#10;        return true;&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package KillEnemies;&#10;&#10;public class Enemy implements Character{&#10;    void kill(){&#10;        System.out.println(&quot;Ahhhggg, you killed me, bastard!&quot;);&#10;    }&#10;    @Override&#10;    public boolean isEnemy() {&#10;        return true;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/KillEnemies/Friend.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/KillEnemies/Friend.java" />
              <option name="originalContent" value="package KillEnemies;&#10;&#10;public class Friend implements Character {&#10;    @Override&#10;    public boolean isEnemy() {&#10;        return false;&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package KillEnemies;&#10;&#10;public class Friend implements Character {&#10;    @Override&#10;    public boolean isEnemy() {&#10;        return false;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/KillEnemies/Main.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/KillEnemies/Main.java" />
              <option name="originalContent" value="package KillEnemies;&#10;&#10;import java.util.ArrayList;&#10;import java.util.Collections;&#10;&#10;public class Main {&#10;    static void main() {&#10;        ArrayList&lt;KillEnemies.Character&gt; character = new ArrayList&lt;&gt;();&#10;        for (int i = 0; i &lt; 5; i++) {&#10;            character.add(new Character() {&#10;                @Override&#10;                public boolean isEnemy() {&#10;                    return false;&#10;                }&#10;            });&#10;        }&#10;        for (int i = 0; i &lt; 5; i++) {&#10;            character.add(new Character() {&#10;                @Override&#10;                public boolean isEnemy() {&#10;                    return true;&#10;                }&#10;            });&#10;        }&#10;        Collections.shuffle(character);&#10;        for (Character character1 : character){&#10;            if (character1.isEnemy()){&#10;                character1.kill();&#10;            }&#10;        }&#10;    }&#10;}" />
              <option name="updatedContent" value="package KillEnemies;&#10;&#10;import java.util.ArrayList;&#10;import java.util.Collections;&#10;&#10;public class Main {&#10;    static void main() {&#10;        ArrayList&lt;KillEnemies.Character&gt; character = new ArrayList&lt;&gt;();&#10;        for (int i = 0; i &lt; 5; i++) {&#10;            character.add(new Character() {&#10;                @Override&#10;                public boolean isEnemy() {&#10;                    return false;&#10;                }&#10;            });&#10;        }&#10;        for (int i = 0; i &lt; 5; i++) {&#10;            character.add(new Character() {&#10;                @Override&#10;                public boolean isEnemy() {&#10;                    return true;&#10;                }&#10;            });&#10;        }&#10;        Collections.shuffle(character);&#10;        for (Character character1 : character){&#10;            if (character1.isEnemy()){&#10;                character1.kill();&#10;            }&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>